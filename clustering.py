# Кластеризация

print('Введите количество точек первого класса:')
n = int(input())
a = [] # Первый класс
for i in range(n):
    print(i + 1, 'точка:')
    s1 = [] # Координаты точки первого класса
    print('Поочередно введите координаты x и y:')
    for j in range(2):
        s1.append(float(input()))
    a.append(s1)

print('Введите количество точек второго класса:')
k = int(input())
b = [] # Второй класс
for i in range(k):
    print(i + 1, 'точка:')
    s2 = [] # Координаты точки второго класса
    print('Поочередно введите координаты x и y:')
    for j in range(2):
        s2.append(float(input()))
    b.append(s2)

print('Введите координату x точки, для которой необходимо определить класс:')
x = float(input())
print('Введите координату y точки, для которой необходимо определить класс:')
y = float(input())

l1 = [] # Список для расстояний до каждой точки 1го класса
l2 = [] # Список для расстояний до каждой точки 2го класса

for i in range(n):
    d1 = ((a[i][0] - x) ** 2 + (a[i][1] - y) ** 2) ** 0.5 # Считаем расстояние до каждой точки первого класса
    l1.append(d1)

for i in range(k):
    d2 = ((b[i][0] - x) ** 2 + (b[i][1] - y) ** 2) ** 0.5 # Считаем расстояние до каждой точки второго класса
    l2.append(d2)

# Находим минимальное расстояние до точки каждого класса:
min1 = min(l1)
min2 = min(l2)

count = 5 # Количество ближайших точек
q1 = 0 # Счетчик точек первого класса, входящих в диапазон
q2 = 0 # Счетчик точек второго класса, входящих в диапазон

# Находим ближайшую точку и обновляем счётчик для ее класса:
for i in range(count):
    if min1 < min2:
        q1 += 1
        l1.remove(min1) # Удаляем эту точку, чтобы дальше ее не учитывать
        if l1: # Проверяем список на пустоту
            min1 = min(l1)
        else:
            break # Если список пустой, выходим из цикла
    else:
        q2 += 1
        l2.remove(min2)
        if l2:
            min2 = min(l2)
        else:
            break

# По счётчикам определяем класс
if q1 < q2:
    print('Точка принадлежит второму классу')
    print('Точек второго класса поблизости:', q2)
else:
    print('Точка принадлежит первому классу')
    print('Точек первого класса поблизости:', q1)
